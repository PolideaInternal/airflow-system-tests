# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
steps:
  - id: 'Clone Apache Airflow repository'
    name: 'gcr.io/cloud-builders/git'
    dir: 'system_tests'
    args: ['clone', '${_AIRFLOW_REPO}']
  - id: 'Clone Airflow Breeze Config repository'
    name: 'gcr.io/cloud-builders/git'
    entrypoint: 'bash'
    dir: 'system_tests/airflow'
    args:
      - '-c'
      - |
          git checkout ${_BRANCH}
          mkdir -p files/airflow-breeze-config
          git clone https://source.developers.google.com/p/"${PROJECT_ID}"/r/airflow-breeze-config \
          files/airflow-breeze-config/
  - id: 'Configure Airflow Breeze Config'
    name: 'gcr.io/cloud-builders/gcloud'
    dir: 'system_tests/airflow'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
          export FILE="./files/airflow-breeze-config/configure_gcb.sh"
          if [[ -f "$$FILE" ]]; then
            echo "$$FILE exists and will be executed."
            chmod +x ./files/airflow-breeze-config/configure_gcb.sh
            ./files/airflow-breeze-config/configure_gcb.sh
          else
            echo "$$FILE does not exist."
          fi

  - id: 'Run system tests'
    name: 'gcr.io/$PROJECT_ID/airflow-system-tests-env'
    dir: 'system_tests/airflow'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
          ${_CMD} || echo $? > exit_code
    env:
      - 'TERM=xterm'
      - 'SKIP_IN_CONTAINER_CHECK=true'
      - 'FORCE_ANSWER_TO_QUESTIONS=yes'
      - 'GITHUB_ACTIONS=false'
  - id: 'CAT log files'
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
          "### Display content of files in system_tests/airflow/logs/ directory ###"
          for file in $(find system_tests/airflow/logs -name '*.log' -type f) ; do
              echo " "
              echo "Display content of files in system_tests/airflow/logs/ directory"
              echo "############ START OF FILE #########"
              echo ${file}
              echo " "
              cat ${file}
              echo "############ END OF FILE ############"
              echo " "
          done
  - id: 'Upload log files to GCS'
    name: 'gcr.io/cloud-builders/gsutil'
    dir: 'system_tests/airflow'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
          FILENAME=$BUILD_ID.zip
          FILEPATH=$_LOGS_GCS_BUCKET/$PROJECT_ID/$$FILENAME
          GCS_GS_FILE_PATH=gs://$$FILEPATH
          GCS_HTTP_FILE_PATH=https://storage.cloud.google.com/$$FILEPATH
          zip -r $$FILENAME logs
          gsutil cp $BUILD_ID.zip $$GCS_GS_FILE_PATH
          echo "Logs uploaded:"
          echo " - $$GCS_GS_FILE_PATH"
          echo " - $$GCS_HTTP_FILE_PATH"
  - id: 'Raise exit status'
    name: 'gcr.io/cloud-builders/gsutil'
    dir: 'system_tests/airflow'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
          if [[ -f "exit_code" ]]; then
              exit $(cat exit_code)
          fi

substitutions:
  _AIRFLOW_REPO: 'https://github.com/apache/airflow'
  _BRANCH: 'master'
  _LOGS_GCS_BUCKET: 'airflow-system-tests-logs'
  _CMD: |
    ./breeze tests --verbose --backend=postgres \
    tests/providers/google/cloud/operators/test_natural_language_system.py -- -s --system=google
  _TAG_TRIGGER_TYPE: 'trigger-manual'
  _TAG_TEST_NAME: 'test-name-not-specified'

tags: ["system-test", "${_TAG_TRIGGER_TYPE}", "${_TAG_TEST_NAME}"]
